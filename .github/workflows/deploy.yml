name: Deploy - Auto Deploy to Server

on:
  workflow_run:
    workflows: ["Docker - Build and Push"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    environment: 
      name: ${{ github.event.inputs.environment || 'production' }}
      url: https://t.me/your_bot_username
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Deploy to production server via SSH
      uses: appleboy/ssh-action@v1.2.2
      env:
        REGISTRY: ghcr.io
        IMAGE_NAME: ${{ github.repository_owner }}/taobao-scraper
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        envs: REGISTRY,IMAGE_NAME
        script: |
          echo "üöÄ Starting deployment..."
          
          # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
          cd ${{ secrets.DEPLOY_PATH || '/opt/taobao-scraper' }}
          
          # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é .env –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
          if [ -f .env ]; then
            cp .env .env.backup
            echo "‚úÖ Backup .env created"
          fi
          
          # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å docker-compose.yml)
          git pull origin main || echo "‚ö†Ô∏è Git pull skipped"
          
          # –õ–æ–≥–∏–Ω –≤ GitHub Container Registry
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          docker-compose down || docker compose down
          
          # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ–±—Ä–∞–∑
          docker pull ${REGISTRY}/${IMAGE_NAME}:latest
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          docker-compose up -d || docker compose up -d
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
          sleep 5
          docker-compose ps || docker compose ps
          
          # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
          docker-compose logs --tail=50 taobao-bot || docker compose logs --tail=50 taobao-bot
          
          # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
          docker system prune -f
          
          echo "‚úÖ Deployment completed successfully!"
    
    - name: Verify deployment
      uses: appleboy/ssh-action@v1.2.2
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          cd ${{ secrets.DEPLOY_PATH || '/opt/taobao-scraper' }}
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω
          if docker ps | grep -q taobao-scraper-bot; then
            echo "‚úÖ Container is running"
            exit 0
          else
            echo "‚ùå Container is not running!"
            docker-compose logs --tail=100 taobao-bot || docker compose logs --tail=100 taobao-bot
            exit 1
          fi
    
    - name: Notification on success
      if: success()
      run: |
        echo "‚úÖ Deployment successful to ${{ github.event.inputs.environment || 'production' }}"
    
    - name: Notification on failure
      if: failure()
      run: |
        echo "‚ùå Deployment failed to ${{ github.event.inputs.environment || 'production' }}"

